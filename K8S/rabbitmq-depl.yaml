apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq-depl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:                             # define the pod we will use
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3-management
          ports:
            - containerPort: 15672      # we define cintainerPort so developers can understand which port(s) the container listens to
              name: rbmq-mgmt-port
            - containerPort: 5672
              name: rbmq-msg-port
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-clusterip-srv
spec:
  type: ClusterIP
  selector:
    app: rabbitmq
  ports:
  - name: rbmq-mgmt-port                # management port
    protocol: TCP
    port: 15672
    targetPort: 15672                   
  - name: rbmq-msg-port
    protocol: TCP
    port: 5672
    targetPort: 5672
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-loadbalancer           # we can set the "metadata.annotations" field to specify which cloud provider to use, eg "service.beta.kubernetes.io/aws-load-balancer-internal: "true""
                                        # if it is not specified, ??????????????????????
spec:
  type: LoadBalancer                    # expose the Service externally using a cloud provider's load balancer
                                        # NodePort and ClusterIP Service, to which the external load balancer routes, are automatically created
                                        # its External-IP is "localhost" becauses ???????????
                                        # each service exsposed by LoadBalancer will get its own IP address
  selector:
    app: rabbitmq
  ports:
    - name: rbmq-mgmt-port
      protocol: TCP
      port: 15672                       # K8S assign each port an External-Port (3xxxx)
                                        # all traffic (HTTP / TCP / gRPC...) comes to this "port" will be forwarded to the Service (defined by "app: rabbitmq" and "targetPort"), no filtering, routing, etc
                                        # we can go to http://localhost:15672/ to check the RabbitMQ dashboard (user_name & pwd: guest)
                                        # what is this localhost???????? why we can access this port from brower????
                                        # why not use 5672?????
      targetPort: 15672
    - name: rbmq-msg-port
      protocol: TCP
      port: 5672
      targetPort: 5672