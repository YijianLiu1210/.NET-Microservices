apiVersion: v1
kind: Service
metadata:
  name: platformnpservice-srv
spec:
  type: NodePort                 # this type of Service can be exposed to the public internet
                                 # using a NodePort gives us the freedom to (1) set up our own load balancing solution
                                 #                                          (2) configure environments that are not fully supported by K8S
                                 #                                          (3) expose one or more nodes' IPs directly
                                 # open a specific port on all Nodes, the port number is defined by "spec.ports.port" field
                                 # disadvantage: if a Node changes IP address, ???????????
                                 # a ClusterIP service, to which the NodePort service will route, is automatically created
                                 # the NodePort Service can also forward the request directly to the pod (defined by "spec.selector" and "spec.ports.targetPort") ??????????
  selector:
    app: platformservice
  ports:
    - name: platformservice
      protocol: TCP
      port: 80                   # specify the internal (within the cluster) port number of the NodePort
                                 # the external port number will be 3xxxx (30000-32767), assigned by Control Plane
                                 # after deploy this config, use "kubectl get services" to check which external port is assigned to this service
      targetPort: 80             # route the request to the port 80 on the pod with label "app: platformservice"

# "kubectl delete service service_name"
# "kubectl get services"